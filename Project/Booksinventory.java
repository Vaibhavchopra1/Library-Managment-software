/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package My_Forms;

import java.sql.PreparedStatement;
import java.sql.*;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import java.lang.Math;   
import javax.swing.table.DefaultTableModel; 
import java.time.LocalDate;

public class Booksinventory extends javax.swing.JFrame {

    /**
     * Creates new form Booksinventory
     */
    public ConnectDb dbconnect = new ConnectDb();
    
       public Booksinventory() {
        initComponents();
        this.setLocationRelativeTo(null);
        try {   
            Statement st = dbconnect.librarycon.createStatement();
	String firstSql = "Select id from student";
	ResultSet rs = st.executeQuery(firstSql);
	while (rs.next()) {
		inventory_student_id_dropdown.addItem(rs.getString(1));
		}
		rs.close();
		} catch (Exception e) {
		}   
          try {
            Statement st = dbconnect.librarycon.createStatement();
	String firstSql = "Select id from book";
	ResultSet rs = st.executeQuery(firstSql);
	while (rs.next()) {
		inventory_book_id_dropdown.addItem(rs.getString(1));
		}
		rs.close();
		} catch (Exception e) {
		}
        try {
            Statement st = dbconnect.librarycon.createStatement();
            String firstSql = "Select * from inventory where issued = 'Y' ";
            ResultSet rs = st.executeQuery(firstSql);
	while (rs.next()) {
		String ids = String.valueOf(rs.getInt("ids"));
                String idb = String.valueOf(rs.getInt("idb"));
                String title = rs.getString("title");
                String name = rs.getString("name");
                String datei = rs.getString("datei");
                String dater = rs.getString("dater");

                String tbData[] = {ids,idb,title,name,datei,dater};
                DefaultTableModel tblmodle = (DefaultTableModel)inventory_outputtable.getModel();
                
                tblmodle.addRow(tbData);
		}
		rs.close();
		} catch (Exception e) {
		}
        
         
         
         
             
    }   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        Inventory_panel_0 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        goback = new javax.swing.JButton();
        Inventory_panel_1 = new javax.swing.JPanel();
        inventory_book_id_fieldname = new javax.swing.JLabel();
        inventory_book_title_feildtext = new javax.swing.JTextField();
        inventory_book_title_fieldname = new javax.swing.JLabel();
        inventory_date_issue_fieldname = new javax.swing.JLabel();
        inventory_student_id_fieldname = new javax.swing.JLabel();
        inventory_student_title_fieldname = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        inventory_date_return_fieldname = new javax.swing.JLabel();
        inventory_issue = new javax.swing.JButton();
        inventory_return = new javax.swing.JButton();
        inventory_date_issue_datechooser = new com.toedter.calendar.JDateChooser();
        inventory_date_return_datechooser = new com.toedter.calendar.JDateChooser();
        inventory_book_id_dropdown = new javax.swing.JComboBox<>();
        inventory_student_id_dropdown = new javax.swing.JComboBox<>();
        Inventory_panel_2 = new javax.swing.JPanel();
        title_1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        inventory_outputtable = new javax.swing.JTable();
        booksissued_button = new javax.swing.JButton();
        overduebook_button = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Inventory_panel_0.setBackground(java.awt.Color.white);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        jLabel1.setText("      Books Inventory");

        goback.setBackground(java.awt.Color.black);
        goback.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        goback.setForeground(java.awt.Color.white);
        goback.setText("Go Back");
        goback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gobackActionPerformed(evt);
            }
        });

        Inventory_panel_1.setBackground(java.awt.Color.white);
        Inventory_panel_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        inventory_book_id_fieldname.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        inventory_book_id_fieldname.setText("Book ID");

        inventory_book_title_fieldname.setText("Book Title");

        inventory_date_issue_fieldname.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        inventory_date_issue_fieldname.setText("Date of issue");

        inventory_student_id_fieldname.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        inventory_student_id_fieldname.setText("Student ID");

        inventory_student_title_fieldname.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        inventory_student_title_fieldname.setText("Student Name");

        inventory_date_return_fieldname.setText("Date of return");

        inventory_issue.setBackground(java.awt.Color.black);
        inventory_issue.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        inventory_issue.setForeground(java.awt.Color.white);
        inventory_issue.setText("Issue");
        inventory_issue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventory_issueActionPerformed(evt);
            }
        });

        inventory_return.setBackground(java.awt.Color.black);
        inventory_return.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        inventory_return.setForeground(java.awt.Color.white);
        inventory_return.setText("Return");
        inventory_return.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventory_returnActionPerformed(evt);
            }
        });

        inventory_book_id_dropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventory_book_id_dropdownActionPerformed(evt);
            }
        });

        inventory_student_id_dropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventory_student_id_dropdownActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Inventory_panel_1Layout = new javax.swing.GroupLayout(Inventory_panel_1);
        Inventory_panel_1.setLayout(Inventory_panel_1Layout);
        Inventory_panel_1Layout.setHorizontalGroup(
            Inventory_panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Inventory_panel_1Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addGroup(Inventory_panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Inventory_panel_1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(inventory_issue)
                        .addGap(178, 178, 178)
                        .addComponent(inventory_return))
                    .addGroup(Inventory_panel_1Layout.createSequentialGroup()
                        .addGroup(Inventory_panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inventory_book_id_dropdown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inventory_date_issue_datechooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inventory_date_issue_fieldname)
                            .addComponent(inventory_book_title_fieldname)
                            .addComponent(inventory_book_id_fieldname)
                            .addComponent(inventory_book_title_feildtext, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addGroup(Inventory_panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inventory_student_id_fieldname)
                            .addComponent(inventory_student_title_fieldname)
                            .addComponent(jTextField3)
                            .addComponent(inventory_date_return_fieldname)
                            .addComponent(inventory_date_return_datechooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inventory_student_id_dropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Inventory_panel_1Layout.setVerticalGroup(
            Inventory_panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Inventory_panel_1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Inventory_panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inventory_book_id_fieldname)
                    .addComponent(inventory_student_id_fieldname))
                .addGap(14, 14, 14)
                .addGroup(Inventory_panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inventory_book_id_dropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inventory_student_id_dropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Inventory_panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inventory_book_title_fieldname)
                    .addComponent(inventory_student_title_fieldname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Inventory_panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inventory_book_title_feildtext, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Inventory_panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inventory_date_issue_fieldname)
                    .addComponent(inventory_date_return_fieldname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Inventory_panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inventory_date_issue_datechooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(Inventory_panel_1Layout.createSequentialGroup()
                        .addComponent(inventory_date_return_datechooser, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Inventory_panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inventory_issue)
                    .addComponent(inventory_return))
                .addContainerGap())
        );

        Inventory_panel_2.setBackground(java.awt.Color.white);
        Inventory_panel_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Inventory_panel_2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Inventory_panel_2MouseClicked(evt);
            }
        });

        title_1.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        title_1.setText("List of books currently issued ");

        inventory_outputtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Book ID", "Book Title", "Student Name", "Date of issue ", "Date of Return"
            }
        ));
        inventory_outputtable.getTableHeader().setReorderingAllowed(false);
        inventory_outputtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inventory_outputtableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(inventory_outputtable);

        booksissued_button.setBackground(java.awt.Color.black);
        booksissued_button.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        booksissued_button.setForeground(java.awt.Color.white);
        booksissued_button.setText("Books issued");
        booksissued_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                booksissued_buttonActionPerformed(evt);
            }
        });

        overduebook_button.setBackground(java.awt.Color.black);
        overduebook_button.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        overduebook_button.setForeground(java.awt.Color.white);
        overduebook_button.setText("Overdue books");
        overduebook_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overduebook_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Inventory_panel_2Layout = new javax.swing.GroupLayout(Inventory_panel_2);
        Inventory_panel_2.setLayout(Inventory_panel_2Layout);
        Inventory_panel_2Layout.setHorizontalGroup(
            Inventory_panel_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Inventory_panel_2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title_1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(overduebook_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(booksissued_button)
                .addGap(11, 11, 11))
            .addGroup(Inventory_panel_2Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        Inventory_panel_2Layout.setVerticalGroup(
            Inventory_panel_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Inventory_panel_2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Inventory_panel_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(title_1)
                    .addComponent(booksissued_button)
                    .addComponent(overduebook_button))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Inventory_panel_0Layout = new javax.swing.GroupLayout(Inventory_panel_0);
        Inventory_panel_0.setLayout(Inventory_panel_0Layout);
        Inventory_panel_0Layout.setHorizontalGroup(
            Inventory_panel_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Inventory_panel_0Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(goback)
                .addGap(107, 107, 107)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(Inventory_panel_0Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Inventory_panel_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Inventory_panel_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Inventory_panel_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        Inventory_panel_0Layout.setVerticalGroup(
            Inventory_panel_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Inventory_panel_0Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Inventory_panel_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(goback))
                .addGap(30, 30, 30)
                .addComponent(Inventory_panel_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Inventory_panel_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Inventory_panel_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Inventory_panel_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gobackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gobackActionPerformed
        // TODO add your handling code here:
        Dashboardform Dashform = new Dashboardform();
            Dashform.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_gobackActionPerformed

    private void inventory_issueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventory_issueActionPerformed
        // TODO add your handling code here:

                try{
            Statement st = dbconnect.librarycon.createStatement();
            String spl = "Delete from overdue";
            PreparedStatement ps = dbconnect.librarycon.prepareStatement(spl);
            ps.execute();
        } catch(Exception e){
        }

         int row_count  = 0;
         
          try{
           Statement st = dbconnect.librarycon.createStatement();
           String firstSql = "Select ids from inventory where dater < '" + LocalDate.now() + "' and issued = 'Y'";
           ResultSet rs = st.executeQuery(firstSql);
           
           while(rs.next()){
               row_count++;
           }
           
         }
         
         catch (Exception e) {}
         try {
          
           
            Statement st = dbconnect.librarycon.createStatement();
           
            String firstSql = "Select ids from inventory where dater < '" + LocalDate.now() + "' and issued = 'Y'";
            
            ResultSet rs = st.executeQuery(firstSql);
            
            
            int[] OverdueArr = new int[row_count];
            int i=0;
	while (rs.next()) {
		OverdueArr[i] = rs.getInt("ids");
            	i++;    
		}
        

        for (int m = 0; m < OverdueArr.length; m++){
            for (int j = m + 1; j < OverdueArr.length; j++)   
                {  
                    int tmp = 0;  
                    if (OverdueArr[m] > OverdueArr[j])   
                    {  
                    tmp = OverdueArr[m];  
                    OverdueArr[m] = OverdueArr[j];  
                    OverdueArr[j] = tmp;  
                    }  
        }
        }
        System.out.println(Arrays.toString(OverdueArr));
        System.out.println(i);
        int student_id_compare = Integer.parseInt(inventory_student_id_dropdown.getSelectedItem().toString());
        int first = 0;
        int last=OverdueArr.length-1;
        int found = -1;
        int mid;  
        while( last> first && found == -1 ){ 
            mid = (first + last)/2;
            if ( OverdueArr[mid] < student_id_compare ){  
            first = mid + 1;     
        }else {
                if ( student_id_compare < OverdueArr[mid]){    
            last = mid - 1;  
        }else{  
            found = 2 ;
        }  
        

        }}
        System.out.println(found);
        if( found != -1){
              java.sql.Date sqldate = new java.sql.Date(inventory_date_issue_datechooser.getDate().getTime());
                java.sql.Date sqldate1 = new java.sql.Date(inventory_date_return_datechooser.getDate().getTime());
                
            try{
                String sql = "Insert into inventory" +"(name,title,issued,datei,dater,ids,idb)" + "values(?,?,?,?,?,?,?)";
               // String sql = "Insert into inventory" +"(title,name,datei,dater,issued,ids,idb)" + "values(?,?,?,?,?,?,?)";
		PreparedStatement ps = dbconnect.librarycon.prepareStatement(sql);

                ps.setString(1, jTextField3.getText());
                ps.setString(2, inventory_book_title_feildtext.getText());
                ps.setString(3,"Y");
                ps.setDate(4,sqldate);
                ps.setDate(5,sqldate1);
                ps.setString(6, inventory_student_id_dropdown.getSelectedItem().toString());
                ps.setString(7, inventory_book_id_dropdown.getSelectedItem().toString());
                ps.execute();
                JOptionPane.showMessageDialog(null, "Issued successfully!!");
                inventory_book_title_feildtext.setText("");
                jTextField3.setText("");
                ((JTextField)inventory_date_issue_datechooser.getDateEditor().getUiComponent()).setText("");
                ((JTextField)inventory_date_return_datechooser.getDateEditor().getUiComponent()).setText("");
                try {
                    String sql1 = "Update book set issued = ? where id =?";
		ps = dbconnect.librarycon.prepareStatement(sql1);
                ps.setString(1, "Y");
                ps.setInt(2, Integer.valueOf(inventory_book_id_dropdown.getSelectedItem().toString()));
                ps.execute();
                }
                catch(Exception e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e);
                }
                }
            catch(Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e);
        }       

        }else{
            JOptionPane.showMessageDialog(null, "The student ID - "+student_id_compare+"has an overdue book so the issue is unsucessful.");
        }

		rs.close();
                
		} catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
		}
                          
    }//GEN-LAST:event_inventory_issueActionPerformed
    
    private void inventory_returnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventory_returnActionPerformed
        // TODO add your handling code here:
        try{
                String sql = "Update inventory set issued = ? where idb =?";
		PreparedStatement ps = dbconnect.librarycon.prepareStatement(sql);
                ps.setString(1, "N");
                ps.setString(2, inventory_book_id_dropdown.getSelectedItem().toString());
                ps.execute();
                JOptionPane.showMessageDialog(null, "Return successfully!!");
                try {
                    String sql1 = "Update book set issued = ? where id =?";
		ps = dbconnect.librarycon.prepareStatement(sql1);
                ps.setString(1, "N");
                ps.setInt(2, Integer.valueOf(inventory_book_id_dropdown.getSelectedItem().toString()));
                ps.execute();
                }
                catch(Exception e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e);
                }
                }
            catch(Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e);
        }           
        
    }//GEN-LAST:event_inventory_returnActionPerformed

    private void inventory_book_id_dropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventory_book_id_dropdownActionPerformed
        // TODO add your handling code here:
    try{
         Statement st = dbconnect.librarycon.createStatement();
            String firstSql = "Select name from book where id = '"+inventory_book_id_dropdown.getSelectedItem().toString()+"'";
            ResultSet rs = st.executeQuery(firstSql);
            while(rs.next()){
                inventory_book_title_feildtext.setText(rs.getString("name"));

            }
                }
    catch(Exception e){
      e.printStackTrace();
                JOptionPane.showMessageDialog(null, e);   
    }
            

       
        
    }//GEN-LAST:event_inventory_book_id_dropdownActionPerformed

    private void booksissued_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_booksissued_buttonActionPerformed
        // TODO add your handling code here:
        title_1.setText("List of books currently issued");
        DefaultTableModel model = (DefaultTableModel) inventory_outputtable.getModel();
            model.setRowCount(0);
        try {
            Statement st = dbconnect.librarycon.createStatement();
            String firstSql = "Select * from inventory where issued = 'Y' ";
            ResultSet rs = st.executeQuery(firstSql);
	while (rs.next()) {
		String ids = String.valueOf(rs.getInt("ids"));
                String idb = String.valueOf(rs.getInt("idb"));
                String title = rs.getString("title");
                String name = rs.getString("name");
                String datei = rs.getString("datei");
                String dater = rs.getString("dater");

                String tbData[] = {ids,idb,title,name,datei,dater};
                
                
                
                DefaultTableModel tblmodle = (DefaultTableModel)inventory_outputtable.getModel();
                
                tblmodle.addRow(tbData);
		}
		rs.close();
		} catch (Exception e) {
		}
    }//GEN-LAST:event_booksissued_buttonActionPerformed

    private void Inventory_panel_2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Inventory_panel_2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Inventory_panel_2MouseClicked

    private void inventory_outputtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventory_outputtableMouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel tb = (DefaultTableModel)inventory_outputtable.getModel();

        String tbids = tb.getValueAt(inventory_outputtable.getSelectedRow(), 0).toString();
        String tbidb = tb.getValueAt(inventory_outputtable.getSelectedRow(), 1).toString();
        String tbtitle = tb.getValueAt(inventory_outputtable.getSelectedRow(), 2).toString();
        String tbname = tb.getValueAt(inventory_outputtable.getSelectedRow(), 3).toString();
        String tbdatei = tb.getValueAt(inventory_outputtable.getSelectedRow(), 4).toString();
        String tbdater = tb.getValueAt(inventory_outputtable.getSelectedRow(), 5).toString();
        inventory_book_id_dropdown.setSelectedItem(tbidb);
        inventory_student_id_dropdown.setSelectedItem(tbids);
        inventory_book_title_feildtext.setText(tbtitle);
        jTextField3.setText(tbname);
        
       
        
    }//GEN-LAST:event_inventory_outputtableMouseClicked

    private void inventory_student_id_dropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventory_student_id_dropdownActionPerformed
        // TODO add your handling code here:
            try{
         Statement st = dbconnect.librarycon.createStatement();
            String firstSql = "Select name from student where id = '"+inventory_student_id_dropdown.getSelectedItem().toString()+"'";
            ResultSet rs = st.executeQuery(firstSql);
            while(rs.next()){
                jTextField3.setText(rs.getString("name"));

            }
                }
    catch(Exception e){
      e.printStackTrace();
                JOptionPane.showMessageDialog(null, e);   
    }
    }//GEN-LAST:event_inventory_student_id_dropdownActionPerformed

    private void overduebook_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_overduebook_buttonActionPerformed
        // TODO add your handling code here:
        title_1.setText("List of books currently overdue");
        try {
            DefaultTableModel model = (DefaultTableModel)  inventory_outputtable.getModel();
            model.setRowCount(0);
            Statement st = dbconnect.librarycon.createStatement();
            String firstSql = "Select * from inventory where dater < '" + LocalDate.now() + "' and issued = 'Y'";
            System.out.println(firstSql);
            ResultSet rs = st.executeQuery(firstSql);
            while (rs.next()) {
                String ids = String.valueOf(rs.getInt("ids"));
                String idb = String.valueOf(rs.getInt("idb"));
                String title = rs.getString("title");
                String name = rs.getString("name");
                String datei = rs.getString("datei");
                String dater = rs.getString("dater");

                String tbData[] = {ids,idb,title,name, datei,dater};
                DefaultTableModel tblmodle = (DefaultTableModel) inventory_outputtable.getModel();

                tblmodle.addRow(tbData);
            }
            rs.close();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_overduebook_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Booksinventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Booksinventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Booksinventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Booksinventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Booksinventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Inventory_panel_0;
    private javax.swing.JPanel Inventory_panel_1;
    private javax.swing.JPanel Inventory_panel_2;
    private javax.swing.JButton booksissued_button;
    private javax.swing.JButton goback;
    private javax.swing.JComboBox<String> inventory_book_id_dropdown;
    private javax.swing.JLabel inventory_book_id_fieldname;
    private javax.swing.JTextField inventory_book_title_feildtext;
    private javax.swing.JLabel inventory_book_title_fieldname;
    private com.toedter.calendar.JDateChooser inventory_date_issue_datechooser;
    private javax.swing.JLabel inventory_date_issue_fieldname;
    private com.toedter.calendar.JDateChooser inventory_date_return_datechooser;
    private javax.swing.JLabel inventory_date_return_fieldname;
    private javax.swing.JButton inventory_issue;
    private javax.swing.JTable inventory_outputtable;
    private javax.swing.JButton inventory_return;
    private javax.swing.JComboBox<String> inventory_student_id_dropdown;
    private javax.swing.JLabel inventory_student_id_fieldname;
    private javax.swing.JLabel inventory_student_title_fieldname;
    private com.toedter.calendar.JCalendar jCalendar1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton overduebook_button;
    private javax.swing.JLabel title_1;
    // End of variables declaration//GEN-END:variables
}
